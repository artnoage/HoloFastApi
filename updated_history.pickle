gASVqhEAAAAAAABdlChdlF2UXZQojDFnb29nbGUuYWkuZ2VuZXJhdGl2ZWxhbmd1YWdlX3YxYmV0YS50eXBlcy5jb250ZW50lIwHQ29udGVudJSTlCmBlENzCmsSaXsidHJhbnNjcmlwdGlvbiI6ICJEbyB5b3Uga25vdyBNYXJpYT8iLCAiZGVzY3JpcHRpb24iOiAiVGhlIHNwZWFrZXIgYXNrcyBhIHF1ZXN0aW9uIGluIGEgbmV1dHJhbCB0b25lLiJ9ChIEdXNlcpRiaAYpgZRC5QEAAArbAxLYA3sidHJhbnNjcmlwdGlvbiI6ICJNYXJpYSBWYW5jZT8gIFllcywgSSBrbmV3IGhlci4gIFdoeSBkbyB5b3UgYXNrPyAgV2Ugd2VyZSBjb2xsZWFndWVzLCB0aG91Z2ggSSB3b3VsZG4ndCBzYXkgd2Ugd2VyZSBjbG9zZS4gIFNoZSB3YXMuLi4gYSBmb3JjZSBvZiBuYXR1cmUsIGluIHRoZSBiZXN0IHNlbnNlIG9mIHRoZSB3b3JkLiAgQnV0IHdoeSBhcmUgeW91IGFza2luZyBtZSBhYm91dCBoZXI/ICBXaG8gYXJlIHlvdSwgZXhhY3RseT8iLCAiZGVzY3JpcHRpb24iOiAiU3Bva2VuIHdpdGggYSBoaW50IG9mIHNhZG5lc3MsIGJ1dCBhbHNvIGEgdG91Y2ggb2YgZ3VhcmRlZG5lc3MsIGFzIGlmIHRoZSBzdHJhbmdlcidzIHByZXNlbmNlIGhhcyBzdGlycmVkIGEgc2Vuc2Ugb2YgdW5lYXNlLiAgUmFwaGFlbCB0YWtlcyBhIHNsb3cgc2lwIG9mIGhpcyBkcmluaywgaGlzIGV5ZXMgZml4ZWQgb24gdGhlIHN0cmFuZ2VyJ3MgZmFjZS4ifQoSBW1vZGVslGJoBimBlEOnCp4BEpsBeyJ0cmFuc2NyaXB0aW9uIjogIldoYXQgZG8geW91IGtub3cgYWJvdXQgTWFyaWE/IiwgImRlc2NyaXB0aW9uIjogIlRoZSBzcGVha2VyIGFza3MgdGhlIHF1ZXN0aW9uIGluIGEgbmV1dHJhbCB0b25lLCB3aXRoIGEgc2xpZ2h0IHBhdXNlIGFmdGVyIFwiTWFyaWEuXCIifQoSBHVzZXKUYmgGKYGUQjECAAAKpwQSpAR7InRyYW5zY3JpcHRpb24iOiAiSSBrbmV3IGhlciBwcm9mZXNzaW9uYWxseS4gIFdlIHNoYXJlZCBjb25jZXJucyBhYm91dCB0aGUgZGlyZWN0aW9uIG9mIHRoZSBmaWVsZCwgdGhlIGV0aGljYWwgaW1wbGljYXRpb25zIG9mIHNvbWUgb2YgdGhlIHJlc2VhcmNoIGJlaW5nIGRvbmUuICBTaGUgd2FzIGEgc3Ryb25nIGFkdm9jYXRlIGZvciByZXNwb25zaWJsZSBkZXZlbG9wbWVudCwgYW5kIEkgcmVzcGVjdGVkIGhlciBmb3IgdGhhdC4gIEJ1dCB3aHkgYXJlIHlvdSBhc2tpbmcgbWUgdGhpcz8gIFdoYXQgZG8geW91IGtub3cgYWJvdXQgTWFyaWE/IiwgImRlc2NyaXB0aW9uIjogIlNwb2tlbiB3aXRoIGEgaGludCBvZiBjYXV0aW9uLCBSYXBoYWVsJ3Mgdm9pY2UgaXMgbG93IGFuZCBtZWFzdXJlZC4gIEhlIGxlYW5zIGZvcndhcmQgc2xpZ2h0bHksIGhpcyBleWVzIHNlYXJjaGluZyB0aGUgc3RyYW5nZXIncyBmYWNlLiAgSGUgdW5jb25zY2lvdXNseSByZWFjaGVzIGZvciBoaXMgZm91bnRhaW4gcGVuLCB0d2lzdGluZyBpdCBiZXR3ZWVuIGhpcyBmaW5nZXJzLiJ9ChIFbW9kZWyUYmVdlF2UKGgGKYGUQ68KpgESowF7InRyYW5zY3JpcHRpb24iOiAiSGVsbG8gc3RyYW5nZXIgd2hvIGFyZSB5b3UiLCAiZGVzY3JpcHRpb24iOiAiVGhlIHNwZWFrZXIncyB2b2ljZSBpcyBjYWxtIGFuZCBuZXV0cmFsLCB3aXRoIGEgc2xpZ2h0IGVjaG8gZWZmZWN0LiBUaGUgYXVkaW8gY3V0cyBvZmYgYWJydXB0bHkuIn0KEgR1c2VylGJoBimBlEJRAQAACscCEsQCeyJ0cmFuc2NyaXB0aW9uIjogIlNvcnJ5LCBJIGRpZG4ndCBjYXRjaCB0aGF0LiBUaGUgbXVzaWMncyBhIGJpdCBsb3VkLiBZb3UncmUgYXNraW5nIHdobyBJIGFtPyBJJ20gQW1hcmEuIFdoYXQgYWJvdXQgeW91PyIsICJkZXNjcmlwdGlvbiI6ICJTcG9rZW4gd2l0aCBhIHNsaWdodCBmcm93biwgbGVhbmluZyBjbG9zZXIgdG8gdGhlIHN0cmFuZ2VyLCB2b2ljZSBsb3dlcmVkIHRvIHRyeSBhbmQgaGVhciBvdmVyIHRoZSBtdXNpYy4gIE9uZSBoYW5kIHVuY29uc2Npb3VzbHkgcmVhY2hlcyBmb3IgdGhlIHNtYWxsIHZvaWNlIHJlY29yZGVyIGluIGhlciBwb2NrZXQuIn0KEgVtb2RlbJRiaAYpgZRDrwqmARKjAXsidHJhbnNjcmlwdGlvbiI6ICJIZWxsbyBzdHJhbmdlciB3aG8gYXJlIHlvdSIsICJkZXNjcmlwdGlvbiI6ICJUaGUgc3BlYWtlcidzIHZvaWNlIGlzIGNhbG0gYW5kIG5ldXRyYWwsIHdpdGggYSBzbGlnaHQgZWNobyBlZmZlY3QuIFRoZSBhdWRpbyBjdXRzIG9mZiBhYnJ1cHRseS4ifQoSBHVzZXKUYmgGKYGUQlEBAAAKxwISxAJ7InRyYW5zY3JpcHRpb24iOiAiU29ycnksIEkgZGlkbid0IGNhdGNoIHRoYXQuIFRoZSBtdXNpYydzIGEgYml0IGxvdWQuIFlvdSdyZSBhc2tpbmcgd2hvIEkgYW0/IEknbSBBbWFyYS4gV2hhdCBhYm91dCB5b3U/IiwgImRlc2NyaXB0aW9uIjogIlNwb2tlbiB3aXRoIGEgc2xpZ2h0IGZyb3duLCBsZWFuaW5nIGNsb3NlciB0byB0aGUgc3RyYW5nZXIsIHZvaWNlIGxvd2VyZWQgdG8gdHJ5IGFuZCBoZWFyIG92ZXIgdGhlIG11c2ljLiAgT25lIGhhbmQgdW5jb25zY2lvdXNseSByZWFjaGVzIGZvciB0aGUgc21hbGwgdm9pY2UgcmVjb3JkZXIgaW4gaGVyIHBvY2tldC4ifQoSBW1vZGVslGJoBimBlEOvCqYBEqMBeyJ0cmFuc2NyaXB0aW9uIjogIkhlbGxvIHN0cmFuZ2VyIHdobyBhcmUgeW91IiwgImRlc2NyaXB0aW9uIjogIlRoZSBzcGVha2VyJ3Mgdm9pY2UgaXMgY2FsbSBhbmQgbmV1dHJhbCwgd2l0aCBhIHNsaWdodCBlY2hvIGVmZmVjdC4gVGhlIGF1ZGlvIGN1dHMgb2ZmIGFicnVwdGx5LiJ9ChIEdXNlcpRiaAYpgZRCUQEAAArHAhLEAnsidHJhbnNjcmlwdGlvbiI6ICJTb3JyeSwgSSBkaWRuJ3QgY2F0Y2ggdGhhdC4gVGhlIG11c2ljJ3MgYSBiaXQgbG91ZC4gWW91J3JlIGFza2luZyB3aG8gSSBhbT8gSSdtIEFtYXJhLiBXaGF0IGFib3V0IHlvdT8iLCAiZGVzY3JpcHRpb24iOiAiU3Bva2VuIHdpdGggYSBzbGlnaHQgZnJvd24sIGxlYW5pbmcgY2xvc2VyIHRvIHRoZSBzdHJhbmdlciwgdm9pY2UgbG93ZXJlZCB0byB0cnkgYW5kIGhlYXIgb3ZlciB0aGUgbXVzaWMuICBPbmUgaGFuZCB1bmNvbnNjaW91c2x5IHJlYWNoZXMgZm9yIHRoZSBzbWFsbCB2b2ljZSByZWNvcmRlciBpbiBoZXIgcG9ja2V0LiJ9ChIFbW9kZWyUYmgGKYGUQ68KpgESowF7InRyYW5zY3JpcHRpb24iOiAiSGVsbG8gc3RyYW5nZXIgd2hvIGFyZSB5b3UiLCAiZGVzY3JpcHRpb24iOiAiVGhlIHNwZWFrZXIncyB2b2ljZSBpcyBjYWxtIGFuZCBuZXV0cmFsLCB3aXRoIGEgc2xpZ2h0IGVjaG8gZWZmZWN0LiBUaGUgYXVkaW8gY3V0cyBvZmYgYWJydXB0bHkuIn0KEgR1c2VylGJoBimBlEJRAQAACscCEsQCeyJ0cmFuc2NyaXB0aW9uIjogIlNvcnJ5LCBJIGRpZG4ndCBjYXRjaCB0aGF0LiBUaGUgbXVzaWMncyBhIGJpdCBsb3VkLiBZb3UncmUgYXNraW5nIHdobyBJIGFtPyBJJ20gQW1hcmEuIFdoYXQgYWJvdXQgeW91PyIsICJkZXNjcmlwdGlvbiI6ICJTcG9rZW4gd2l0aCBhIHNsaWdodCBmcm93biwgbGVhbmluZyBjbG9zZXIgdG8gdGhlIHN0cmFuZ2VyLCB2b2ljZSBsb3dlcmVkIHRvIHRyeSBhbmQgaGVhciBvdmVyIHRoZSBtdXNpYy4gIE9uZSBoYW5kIHVuY29uc2Npb3VzbHkgcmVhY2hlcyBmb3IgdGhlIHNtYWxsIHZvaWNlIHJlY29yZGVyIGluIGhlciBwb2NrZXQuIn0KEgVtb2RlbJRiaAYpgZRDcwprEml7InRyYW5zY3JpcHRpb24iOiAiRG8geW91IGtub3cgTWFyaWE/IiwgImRlc2NyaXB0aW9uIjogIlRoZSBzcGVha2VyIGFza3MgYSBxdWVzdGlvbiBpbiBhIG5ldXRyYWwgdG9uZS4ifQoSBHVzZXKUYmgGKYGUQg4BAAAKhAISgQJ7InRyYW5zY3JpcHRpb24iOiAiTWFyaWEgVmFuY2U/IFllYWgsIEkga25ldyBoZXIuIEJyaWxsaWFudCB3b21hbi4gQnV0IHdoeSBhcmUgeW91IGFza2luZyBtZSBhYm91dCB0aGlzPyBXaG8gZXhhY3RseSBhcmUgeW91PyIsICJkZXNjcmlwdGlvbiI6ICJTcG9rZW4gd2l0aCBhIG1peHR1cmUgb2Ygc2FkbmVzcyBhbmQgc3VzcGljaW9uLCBmaW5nZXJzIHRpZ2h0ZW5pbmcgYXJvdW5kIHRoZSBnbGFzcywgZXllcyBkYXJ0aW5nIHRvIHRoZSBleGl0cyJ9ChIFbW9kZWyUYmgGKYGUQ68KpgESowF7InRyYW5zY3JpcHRpb24iOiAiSGVsbG8gc3RyYW5nZXIgd2hvIGFyZSB5b3UiLCAiZGVzY3JpcHRpb24iOiAiVGhlIHNwZWFrZXIncyB2b2ljZSBpcyBjYWxtIGFuZCBuZXV0cmFsLCB3aXRoIGEgc2xpZ2h0IGVjaG8gZWZmZWN0LiBUaGUgYXVkaW8gY3V0cyBvZmYgYWJydXB0bHkuIn0KEgR1c2VylGJoBimBlEJRAQAACscCEsQCeyJ0cmFuc2NyaXB0aW9uIjogIlNvcnJ5LCBJIGRpZG4ndCBjYXRjaCB0aGF0LiBUaGUgbXVzaWMncyBhIGJpdCBsb3VkLiBZb3UncmUgYXNraW5nIHdobyBJIGFtPyBJJ20gQW1hcmEuIFdoYXQgYWJvdXQgeW91PyIsICJkZXNjcmlwdGlvbiI6ICJTcG9rZW4gd2l0aCBhIHNsaWdodCBmcm93biwgbGVhbmluZyBjbG9zZXIgdG8gdGhlIHN0cmFuZ2VyLCB2b2ljZSBsb3dlcmVkIHRvIHRyeSBhbmQgaGVhciBvdmVyIHRoZSBtdXNpYy4gIE9uZSBoYW5kIHVuY29uc2Npb3VzbHkgcmVhY2hlcyBmb3IgdGhlIHNtYWxsIHZvaWNlIHJlY29yZGVyIGluIGhlciBwb2NrZXQuIn0KEgVtb2RlbJRiZWUu